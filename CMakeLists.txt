# This file was generated by Jucer2Reprojucer from "tgtracker.jucer"

cmake_minimum_required(VERSION 3.4)

project("tgtracker")


list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../../usr/local/FRUT/cmake")
include(Reprojucer)


set(tgtracker_jucer_FILE
  "${CMAKE_CURRENT_LIST_DIR}/juce/tgtracker.jucer"
)


set(JUCE_MODULES_GLOBAL_PATH "/usr/share/juce/modules")


jucer_project_begin(
  JUCER_VERSION "5.4.7"
  PROJECT_FILE "${tgtracker_jucer_FILE}"
  PROJECT_ID "VYUQOU"
)

jucer_project_settings(
  PROJECT_NAME "tgtracker"
  PROJECT_VERSION "0.1.0-alpha"
  COMPANY_NAME "tonal glyph"
  COMPANY_COPYRIGHT "(C) 2020 tonal glyph"
  COMPANY_EMAIL "scalarwaves@null.net"
  REPORT_JUCE_APP_USAGE ON # Required for closed source applications without an Indie or Pro JUCE license
  DISPLAY_THE_JUCE_SPLASH_SCREEN ON # Required for closed source applications without an Indie or Pro JUCE license
  PROJECT_TYPE "GUI Application"
  BUNDLE_IDENTIFIER "com.tonal-glyph.tgtracker"
  BINARYDATACPP_SIZE_LIMIT "20.0 MB"
  BINARYDATA_NAMESPACE "TGBinary"
  CXX_LANGUAGE_STANDARD "Use Latest"
)

jucer_project_files("tgtracker/Source"
# Compile   Xcode     Binary    File
#           Resource  Resource
  .         .         .         "Source/MainComponent.h"
  x         .         .         "Source/MainComponent.cpp"
  x         .         .         "Source/Main.cpp"
)

jucer_project_module(
  juce_audio_basics
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_project_module(
  juce_audio_devices
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_WINRT_MIDI
  # JUCE_ASIO
  # JUCE_WASAPI
  # JUCE_WASAPI_EXCLUSIVE
  # JUCE_DIRECTSOUND
  # JUCE_ALSA
  # JUCE_JACK
  # JUCE_BELA
  # JUCE_USE_ANDROID_OBOE
  # JUCE_USE_ANDROID_OPENSLES
  # JUCE_DISABLE_AUDIO_MIXING_WITH_OTHER_APPS
)

jucer_project_module(
  juce_audio_formats
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_FLAC
  # JUCE_USE_OGGVORBIS
  # JUCE_USE_MP3AUDIOFORMAT
  # JUCE_USE_LAME_AUDIO_FORMAT
  # JUCE_USE_WINDOWS_MEDIA_FORMAT
)

jucer_project_module(
  juce_audio_processors
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_PLUGINHOST_VST
  # JUCE_PLUGINHOST_VST3
  # JUCE_PLUGINHOST_AU
  # JUCE_PLUGINHOST_LADSPA
)

jucer_project_module(
  juce_audio_utils
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_CDREADER
  # JUCE_USE_CDBURNER
)

jucer_project_module(
  juce_core
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_FORCE_DEBUG
  # JUCE_LOG_ASSERTIONS
  # JUCE_CHECK_MEMORY_LEAKS
  # JUCE_DONT_AUTOLINK_TO_WIN32_LIBRARIES
  # JUCE_INCLUDE_ZLIB_CODE
  # JUCE_USE_CURL
  # JUCE_LOAD_CURL_SYMBOLS_LAZILY
  # JUCE_CATCH_UNHANDLED_EXCEPTIONS
  # JUCE_ALLOW_STATIC_NULL_VARIABLES
  JUCE_STRICT_REFCOUNTEDPOINTER ON
)

jucer_project_module(
  juce_cryptography
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_project_module(
  juce_data_structures
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_project_module(
  juce_events
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_EXECUTE_APP_SUSPEND_ON_BACKGROUND_TASK
)

jucer_project_module(
  juce_graphics
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_COREIMAGE_LOADER
  # JUCE_USE_DIRECTWRITE
  # JUCE_DISABLE_COREGRAPHICS_FONT_SMOOTHING
)

jucer_project_module(
  juce_gui_basics
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_ENABLE_REPAINT_DEBUGGING
  # JUCE_USE_XRANDR
  # JUCE_USE_XINERAMA
  # JUCE_USE_XSHM
  # JUCE_USE_XRENDER
  # JUCE_USE_XCURSOR
  # JUCE_WIN_PER_MONITOR_DPI_AWARE
)

jucer_project_module(
  juce_gui_extra
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_WEB_BROWSER
  # JUCE_ENABLE_LIVE_CONSTANT_EDITOR
)

jucer_project_module(
  juce_opengl
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_export_target(
  "Visual Studio 2019"
)

jucer_export_target_configuration(
  "Visual Studio 2019"
  NAME "Debug"
  DEBUG_MODE ON
)

jucer_export_target_configuration(
  "Visual Studio 2019"
  NAME "Release"
  DEBUG_MODE OFF
)

jucer_export_target(
  "Linux Makefile"
)

jucer_export_target_configuration(
  "Linux Makefile"
  NAME "Debug"
  DEBUG_MODE ON
)

jucer_export_target_configuration(
  "Linux Makefile"
  NAME "Release"
  DEBUG_MODE OFF
)

jucer_export_target(
  "Code::Blocks (Windows)"
)

jucer_export_target_configuration(
  "Code::Blocks (Windows)"
  NAME "Debug"
  DEBUG_MODE ON
  ARCHITECTURE "64-bit (-m64)"
)

jucer_export_target_configuration(
  "Code::Blocks (Windows)"
  NAME "Release"
  DEBUG_MODE OFF
  ARCHITECTURE "64-bit (-m64)"
)

jucer_project_end()
